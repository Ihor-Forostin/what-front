pipeline {
  agent any
  tools {
  nodejs "node"
  
  }
  options{
    buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    timestamps()
  }
  stages {
    stage('Build') {
      steps {
        
        sh 'npm cache clean -f'
        sh 'npm rebuild node-sass'
        sh 'npm install --global node-gyp'
        sh 'npm install --global cross-env'
        sh 'npm run build'
        sh 'node -v'
        sh 'npm -v'
        sh 'pwd'
        sh 'ls'
        
        
    
      
      }
    }
   
  stage('SonarQube Analysis') {
//    def scannerHome = tool 'SonarScanner';
steps{
    withSonarQubeEnv('SonarScanner') {
//      sh "${scannerHome}/bin/sonar-scanner"
      sh "mvn sonar:sonar"
    }
    }
  }
}
  
 post {
        always {
            emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
        }
    }


}
